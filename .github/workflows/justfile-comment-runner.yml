name: Justfile Comment Runner

on:
  issue_comment:
    types: [created]

jobs:
  run_justfile_commands:
    if: startsWith(github.event.comment.body, '/run')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate user is admin
        id: is_admin
        uses: actions/github-script@v7
        with:
          script: |
            // Only allow org admins (repo admins for orgs, or repo owner)
            let allowed = false;
            const actor = context.actor;
            if (context.payload.repository.owner.type === "Organization") {
              try {
                const { data } = await github.orgs.getMembershipForUser({
                  org: context.repo.owner,
                  username: actor,
                });
                allowed = data.role === "admin";
              } catch (e) {}
            } else {
              allowed = (actor === context.repo.owner);
            }
            core.setOutput('allowed', allowed);
      - name: Exit if not admin
        if: steps.is_admin.outputs.allowed != 'true'
        run: |
          echo "User ${{ github.actor }} is not authorized to run commands."
          exit 1

      - name: Install just (Justfile runner)
        run: |
          sudo apt-get update
          sudo apt-get install -y just

      - name: Parse and run Justfile commands
        env:
          COMMENT: ${{ github.event.comment.body }}
        run: |
          #!/usr/bin/env bash
          set -e

          # Remove the '/run' prefix, trim whitespace
          body="${COMMENT#\/run}"
          body="$(echo "$body" | xargs)"

          # Split commands on '&&' or ';'
          IFS=$'\n' read -rd '' -a commands <<<"$(echo "$body" | sed 's/&&/\n/g; s/;/\n/g' | sed '/^\s*$/d' | sed 's/^\s*//; s/\s*$//')"

          results=""
          for cmd in "${commands[@]}"; do
            justcmd="$(echo "$cmd" | awk '{print $1}')"
            if [[ ! "$justcmd" =~ ^[a-zA-Z0-9_-]+$ ]]; then
              echo "Refusing to run suspicious just command: $justcmd"
              exit 1
            fi
            args="${cmd#"$justcmd"}"
            echo "::group::Running: just $justcmd$args"
            if output=$(just $justcmd $args 2>&1); then
              results+="✅ just $justcmd$args\n$output\n\n"
            else
              results+="❌ just $justcmd$args\n$output\n\n"
              echo "::endgroup::"
              break
            fi
            echo "::endgroup::"
          done

          echo -e "$results" > results.txt

      - name: Comment results (optional)
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body-file: results.txt
